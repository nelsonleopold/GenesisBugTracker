@model IEnumerable<GenesisBugTracker.Models.Project>
@using GenesisBugTracker.Models.ViewModels
@using GenesisBugTracker.Models.Enums
@using GenesisBugTracker.Services.Interfaces
@using Microsoft.AspNetCore.Identity

@inject IBTProjectService ProjectService


@{
    ViewData["Title"] = "All Projects";
}

<h1>All Projects</h1>

@if (User.IsInRole(nameof(BTRoles.Admin)) || User.IsInRole(nameof(BTRoles.ProjectManager)))
{
    <p>
        <a asp-action="Create">Create New</a>
    </p>
}

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Created)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.StartDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.EndDate)
            </th>
            <th>
                Project Image
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Archived)
            </th>
            <th>
                @if (User.IsInRole(nameof(BTRoles.Admin)))
                {
                    <div class="form-group">
                        <label class="form-label">@nameof(BTRoles.ProjectManager)</label>
                    </div>
                }
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ProjectPriority)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Created)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.StartDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.EndDate)
                </td>
                <td>
                    @if (item.ImageFileData != null)
                    {
                        <img style="height:120px;width:120px" src="data:image/*;base64,@(Convert.ToBase64String(item.ImageFileData!))" alt="">
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Archived)
                </td>
                <td>
                    @if (User.IsInRole(nameof(BTRoles.Admin)))
                    {
                        @((await ProjectService.GetProjectManagerAsync(item.Id))?.FullName)
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ProjectPriority!.Name)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                    <a asp-action="Archive" asp-route-id="@item.Id">Archive</a>
                    @if (User.IsInRole(nameof(BTRoles.Admin)))
                    {
                        <button class="btn btn-dark"><a asp-action="AssignProjectManager" asp-route-id="@item.Id">Assign PM</a></button>
                    }
                    @if (User.IsInRole(nameof(BTRoles.Admin)) || User.IsInRole(nameof(BTRoles.ProjectManager)))
                    {
                        <button class="btn btn-dark"><a asp-action="AssignProjectMembers" asp-route-id="@item.Id">Assign Project Members</a></button>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>
